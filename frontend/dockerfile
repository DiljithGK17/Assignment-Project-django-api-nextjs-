# Stage 1: Install dependencies and build the Next.js application
FROM node:18-alpine AS builder

WORKDIR /app

COPY package.json yarn.lock* package-lock.json* ./
RUN \
    if [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
    elif [ -f package-lock.json ]; then npm ci; \
    else npm install; \
    fi

COPY . .
RUN npm run build # <--- ADD THIS LINE BACK! This runs the production build.

# Stage 2: Serve the Next.js application with a minimal server
FROM node:18-alpine

WORKDIR /app

# Copy only the necessary production build artifacts from the builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json 
COPY --from=builder /app/public ./public
# If your project uses a custom server.js, copy it:
# COPY --from=builder /app/server.js ./server.js

EXPOSE 3000

# Command to run the Next.js application in production mode
CMD ["npm", "start"]
